name: Pipeline-CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: LS
        run: ls

      # PHP Setup
      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      # Run Composer install
      - name: "Composer install"
        run: composer install --no-interaction --no-progress

      # Install Symfony CLI
      #- name: Symfony CLI
      #  run: |
      #    curl -sS https://get.symfony.com/cli/installer

      # Check vulnerabilities
      #- name: Symfony Check Vulnerabilities
      #  run: symfony check:security

      # Create database for test env
      #- name: Create database for test environnement
      #  run: |
      #    php bin/console doctrine:database:create --env test

      # Create database schema
      #- name: Create database schema
      #  run: |
      #    php bin/console doctrine:schema:update --env test --force

      # Load fixtures for test environnement
      #- name: Load fixtures for test environnement
      #  run: |
      #    php bin/console doctrine:fixtures:load --env test --no-interaction

      # Run PHPUnit tests
      #- name: PHP Unit
      #  run: ./bin/phpunit
